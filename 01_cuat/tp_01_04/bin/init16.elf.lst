     1                                  USE16
     2                                  
     3                                  SECTION .init16
     4                                  
     5                                  %include "inc/processor-flags.h" 
     1                              <1> %define X86_CR0_PE      0x00000001 ;/* Protectede mode enable*/
     2                              <1> %define X86_CR0_MP      0x00000002 ;/* Monitor coProcessor*/
     3                              <1> %define X86_CR0_EM      0x00000004 ;/* Emulation*/
     4                              <1> %define X86_CR0_TS      0x00000008 ;/* Task Switched*/
     5                              <1> %define X86_CR0_ET      0x00000010 ;/* Extension Type*/
     6                              <1> %define X86_CR0_NE      0x00000020 ;/* Numeric Error*/
     7                              <1> %define X86_CR0_WP      0x00010000 ;/* Write Protect*/
     8                              <1> %define X86_CR0_AM      0x00040000 ;/* Alignment Mask*/
     9                              <1> %define X86_CR0_NW      0x20000000 ;/* Not Write-through*/
    10                              <1> %define X86_CR0_CD      0x40000000 ;/* Cache Disable*/
    11                              <1> %define X86_CR0_PG      0x80000000 ;/* PaGine*/
     6                                  ;Start and jump by now
     7                                  
     8                                  GLOBAL init16
     9                                  EXTERN entry
    10                                  
    11                                  EXTERN _gdtr
    12                                  EXTERN CS_SEL_32
    13                                  EXTERN start32_launcher
    14                                  EXTERN __STACK_START_16
    15                                  EXTERN __STACK_END_16
    16                                  
    17                                  
    18                                  init16:
    19                                  
    20                                  
    21 00000000 66A900000000                test eax,0x0    ;Check uP status
    22 00000006 7536                        jne fault_end
    23                                  
    24                                  
    25                                      ;xchg bx,bx
    26                                  
    27 00000008 6631C0                      xor eax,eax
    28 0000000B 0F22D8                      mov cr3,eax         ;Disabhle TLB
    29                                  
    30                                      ;Set 16 bits stacks
    31 0000000E 8CC8                        mov ax,cs
    32 00000010 8ED8                        mov ds,ax
    33 00000012 B8[0000]                    mov ax,__STACK_START_16
    34 00000015 8ED0                        mov ss,ax
    35 00000017 BC[0000]                    mov sp,__STACK_END_16
    36                                  
    37                                      ;Disable cache
    38 0000001A 0F20C0                      mov eax,cr0
    39 0000001D 660D00000060                or eax, (X86_CR0_NW | X86_CR0_CD)
    40 00000023 0F22C0                      mov cr0,eax
    41 00000026 0F09                        wbinvd
    42                                  
    43                                      ;xchg bx,bx
    44 00000028 0F0116[0000]                lgdt [_gdtr]
    45                                  
    46                                  
    47                                  
    48                                      ;establece el up en MP
    49 0000002D 0F01E0                      smsw ax
    50 00000030 83C801                      or   ax, X86_CR0_PE
    51 00000033 0F01F0                      lmsw ax
    52                                      ;xchg bx,bx
    53 00000036 66EA[00000000]-             jmp dword CS_SEL_32:start32_launcher
    53 0000003C [0000]             
    54                                  
    55                                      fault_end:
    56 0000003E F4                              hlt
    57                                  
    58                                  
    59                                  
    60                                  
    61                                  
    62                                  
    63                                  
    64                                  
    65                                  
    66                                  
    67                                  ;
    68                                  ;
    69                                  ;
    70                                  %define PORT_A_8042    0x60
    71                                  %define CTRL_PORT_8042 0x64
    72                                  %define KEYB_DIS       0xAD
    73                                  %define KEYB_EN        0xAE
    74                                  %define READ_OUT_8042  0xD0
    75                                  %define WRITE_OUT_8042 0xD1
    76                                  
    77                                  
    78                                  
    79                                  
    80                                  
    81                                  
    82                                  
    83                                  
    84                                  
    85                                  
    86                                  
    87                                  
